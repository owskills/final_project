#В первую очередь, необходимо загрузить все библиотеки, которые будут в дальнейшем использоваться, и прочитать нашу базу данных. Используемая БД была создана на основе исследовани ядиабета у женщин в возрасте от 21 года и старше, принадлежащих к племени индейцев пима, которые наиболее склонны к диабету относительно остального населения США, где проводился сбор данных. В наборе данных собрана информация о возрасте, диабет-статусе, индексе массы тела, кровяном давлении, уровне глюкозы в плазме крови, уровне инсулина в крови, толщине кожно-жировой складки трицепса, количестве беременностей и наследственной прерасположенности к диабету.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib as mpl
mpl.rcParams.update(mpl.rcParamsDefault)
data = pd.read_csv("data.csv")
#Проводим первичный обзор данных, в который входит оценка столбцов и типов данных, а также поиск пропущенных значений и их обработка. Заранее удаляем дублирующиеся записи.
data = data.drop_duplicates()
data.info()
data.isnull().sum()
#Можем увидеть, что все данные в базе являются числовыми (количественными), кроме одного: результат анализа на диабет является булевыми (и бинарными). Пропущенных значений нет, так что обрабатывать нечего. Если бы они были, эту проблему можно было бы решить заполнением данных средним значением, характерным для конкретного параметра.
#Далее проанализируем распределения переменных. Для начала, построим гистограммы распределения всех количественных признаков.
features = list(set(data.columns) - set(['diabetes']))
data[features].hist(figsize=(15,20))
plt.show()
#У трех параметров есть аномальные значения в самом начале: кровяное давление (blood pressure), уровень глюкозы в плазме крови (plasma glucose) и индекс массы тела (bmi). Чтобы убедиться, можно построить ящик с усами для каждого из этих параметров.
plt.boxplot(data['blood pressure'])
plt.title('Анализ выбросов для значений кровяного давления')
plt.show()
plt.boxplot(data['plasma glucose'])
plt.title('Анализ выбросов для значений уровня глюкозы')
plt.show()
plt.boxplot(data['bmi'])
plt.title('Анализ выбросов для значений ИМТ')
plt.show()
#У всех трех признаков в наборе данных есть нулевые значения, но в реальности такого быть не может, так как у человека не могут такие параметры быть нулевыми. У кровяного давления и ИМТ есть аномально высокие значения, которые, в целом, имеют место быть в реальности, но очень выбиваются из общего числа. Строчки с нулевыми значениями данных параметров я удаляю из набора, удаляю также строчки с значением ИМТ свыше 60 и кровяным давлением более 120. Такие значения получены путем анализа бокс-плотов.
newdata = data[(data['bmi'] > 0) & (data['bmi'] <= 60) & (data['blood pressure'] > 0) & (data['blood pressure'] < 120) & (data['plasma glucose'] > 0)]
newdata.info()
#Далее в разведочном анализе будет использоваться новая БД, из которой были удалены аномалии. Таким образом, можно приступать к самому анализу. Для начала, имеет смысл ознакомиться с соотношением людей больных диабетом и здоровых в представленном наборе данных. Для этого строим одномерную гистограмму.
sns.set_style('darkgrid')
sns.countplot(y='diabetes',data=newdata,palette='cubehelix')
plt.xlabel('Количество человек')
plt.ylabel('Результат анализа на диабет')
plt.title('Соотношение больных и здоровых людей')
plt.show()
#Видим, что около трети испытуемых здоровы. Дальше можно исследовать корреляции между различными парами переменных. Для начала, стоит построить тепловую карту, чтобы сразу увидеть все взаимосвязи между имеющимися количественными признаками. Из БД удаляется параметр diabetes, так как он является булевым.
corr_matrix = newdata.drop(['diabetes'], axis=1).corr()
sns.heatmap(corr_matrix)
plt.title('Тепловая карта')
plt.show()
#Мы имеем пять пар параметров, взаимосзять которых имеет смысл рассматривать. Построим пять соответствующих диаграмм рассеяния.
sns.set_style('darkgrid')
plt.title('Зависимость уровня инсулина в крови и ИМТ', size=10)
plt.xlabel('ИМТ, кг/м^2',size=10)
plt.ylabel('Уровень инсулина в крови, пмоль/л',size=10)
sns.scatterplot(x='bmi', y='insulin', data=newdata, hue='diabetes')
plt.show()
corr1 =newdata['insulin'].corr(newdata['bmi'])
print('Корреляция между уровнем инсулина и ИМТ', corr1)
sns.set_style('darkgrid')
plt.title('Зависимость предрасположенности к диабету и ИМТ', size=10)
plt.xlabel('ИМТ, кг/м^2',size=10)
plt.ylabel('Коэффициент наследственной предрасположенности',size=10)
sns.scatterplot(x='bmi', y='diabetes pedigree', data=newdata, hue='diabetes')
plt.show()
corr2 =newdata['diabetes pedigree'].corr(newdata['bmi'])
print('Корреляция между предрасположенностью и ИМТ', corr2)
sns.set_style('darkgrid')
plt.title('Зависимость толщины кожи на трицепсе и ИМТ', size=10)
plt.xlabel('ИМТ, кг/м^2',size=10)
plt.ylabel('Толщина кожи на трицепсе, мм',size=10)
sns.scatterplot(x='bmi', y='triceps skin thickness', data=newdata, hue='diabetes')
plt.show()
corr3 =newdata['triceps skin thickness'].corr(newdata['bmi'])
print('Корреляция между толщиной кожи и ИМТ', corr3)
sns.set_style('darkgrid')
plt.title('Зависимость толщины кожи на трицепсе и уровня инсулина', size=10)
plt.xlabel('Уровень инсулина в крови, пмоль/л',size=10)
plt.ylabel('Толщина кожи на трицепсе, мм',size=10)
sns.scatterplot(x='insulin', y='triceps skin thickness', data=newdata, hue='diabetes')
plt.show()
corr4 =newdata['triceps skin thickness'].corr(newdata['insulin'])
print('Корреляция между толщиной кожи и уровнем инсулина', corr4)
sns.set_style('darkgrid')
plt.title('Зависимость уровня глюкозы в плазме и количества беременностей', size=10)
plt.xlabel('Количество беременностей',size=10)
plt.ylabel('Уровень глюкозы в плазме крови, мг/мл',size=10)
sns.scatterplot(x='pregnancies', y='plasma glucose', data=newdata, hue='diabetes')
plt.show()
corr5 =newdata['plasma glucose'].corr(newdata['pregnancies'])
print('Корреляция между количеством беременностей и уровнем глюкозы', corr5)
#Исходя из полученных графиков можно сделать следующие выводы:
#Все предствленные зависимости имеют положительную корреляцию (если увеличивается один параметр, то второй также увеличивается);
#У диабетиков в большинстве наблюдается более повышенный уровень инсульна в крови, а также ИМТ выше, чем у здорового человека;
#Наследственная предрасположенность особо не влияет на проявление болезни у человека;
#У диабетиков кожно-жировая складка обычно толще, а значит высокий показатель ИМТ у больных из-за высокого содержания именно жира в организме;
#Как таковой корреляции между количеством беременностей и уровнем глюкозы нет, но стоит отметить, что немало шансов появления диабета у женщин, которые пережили несколько родов.
#Можно построить такую обобщенную подробную картинку, где на главной диагонали графики распределения признаков, а вне - диаграммы рассеяния для пар признаков.
sns.pairplot(newdata[features + ['diabetes']], hue='diabetes')
plt.show()
#Далее можно посмотреть какие признаки связаны с наличием или отсуствием диабета, для чего будут построение ящики с усами, которые будут описывать статистику распределения всех количественных признаков в двух группах: среди больных и здоровых испытуемых.
fig, axes = plt.subplots(nrows=3, ncols=4, figsize=(15, 10))

for idx, feat in  enumerate(features):
    sns.boxplot(x='diabetes', y=feat, data=newdata, ax=axes[idx//4][idx%4])
    axes[idx//4][idx%4].legend()
    axes[idx//4][idx%4].set_xlabel('diabetes')
    axes[idx//4][idx%4].set_ylabel(feat);
plt.show()
